{% extends 'base.html.twig' %}

{% block title %}User Profile{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('css/dataTable-Bootstarp.css') }}" rel="stylesheet" type="text/css"/>
    <link href="{{ asset('css/dataTables.bootstrap4.min.css') }}" rel="stylesheet" type="text/css"/>
    <style>
        #needs-list_filter{
            float: right;
        }
        #needs-list td, #needs-list th {
            text-align: center;
            font-size: 20px;
        }
        #capabilities-list_filter{
            float: right;
        }
        #capabilities-list td, #capabilities-list th {
            text-align: center;
            font-size: 20px;
        }
    </style>
{% endblock %}

{% block body %}
    <!-- block -->
    <div class="block">
        <div class="navbar navbar-inner block-header" style="margin-bottom: 30px;">
        </div>
        <center>
            <div class="block-content collapse in">
                <div class="table-toolbar">
                    <div class="btn-group">
                        <h3><label class="btn btn-success">Respect Points :- {{app.user.respectPoint}}</label></h3>
                    </div>
                </div>
            </div>
            <div class="table-responsive">
                <img src="{{ asset('img/user-profile-pic.jpg') }}" height="500" width="500">
            </div>
        </center>
    </div>
    <div class="block">
        <div class="navbar navbar-inner block-header" style="margin-bottom: 30px;">
            <div class="muted pull-left">Needs</div>
        </div>
        <div class="block-content collapse in">
            <div class="table-toolbar">
                <div class="btn-group">
                    <a href="#NeedsModal" data-toggle="modal" class="btn btn-lg btn-success add-needs">Add Needs <i class="icon-plus icon-white"></i></a>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table id="needs-list" class="table table-striped table-head-color dataTable no-footer" width="100%">
                <thead>
                    <tr>
                        <th width="50%">Needs</th>
                    </tr>
                </thead>
                <tbody>
                    {% for need in needs %}
                    <tr>
                        <td>{{need.title}}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
    <div class="block">
        <div class="navbar navbar-inner block-header" style="margin-bottom: 30px;">
            <div class="muted pull-left">Capabilities</div>
        </div>
        <div class="block-content collapse in">
            <div class="table-toolbar">
                <div class="btn-group">
                    <a href="#CapabilitiesModal" data-toggle="modal" class="btn btn-lg btn-success add-capabilities">Add Capabilities <i class="icon-plus icon-white"></i></a>
                </div>
            </div>
        </div>
        <div class="table-responsive">
            <table id="capabilities-list" class="table table-striped table-head-color dataTable no-footer" width="100%">
                <thead>
                    <tr>
                        <th width="50%">Capabilities</th>
                    </tr>
                </thead>
                <tbody>
                    {% for capability in capabilities %}
                    <tr>
                        <td>{{capability.title}}</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
    <!-- /block -->
    <!-- Manage Needs Modal -->
    <div id="NeedsModal" class="modal hide">
        <form action="{{ path('add-need') }}" id="needs-form" method="POST" class="form-horizontal">
            <div class="modal-header">
                <button data-dismiss="modal" class="close" type="button">&times;</button>
                <h3>Add Needs</h3>
            </div>
            <div class="modal-body">
                <fieldset>
                    <div class="alert alert-error hide">
                        <button class="close" data-dismiss="alert"></button>
                        You have some form errors. Please check below.
                    </div>
                    <div class="control-group">
                        <label class="control-label">Need<span class="required">*</span></label>
                        <div class="controls">
                            <input type="text" name="title" data-required="1" class="span6 m-wrap"/>
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Save</button>
                <button data-dismiss="modal" type="button" class="btn">Cancel</button>
            </div>
        </form>
    </div>
    <!-- Manage Capabilities Modal -->
    <div id="CapabilitiesModal" class="modal hide">
        <form action="{{ path('add-capability') }}" id="capabilities-form" method="POST" class="form-horizontal">
            <div class="modal-header">
                <button data-dismiss="modal" class="close" type="button">&times;</button>
                <h3>Add Capabilities</h3>
            </div>
            <div class="modal-body">
                <fieldset>
                    <div class="alert alert-error hide">
                        <button class="close" data-dismiss="alert"></button>
                        You have some form errors. Please check below.
                    </div>
                    <div class="control-group">
                        <label class="control-label">Capabilities<span class="required">*</span></label>
                        <div class="controls">
                            <input type="text" name="title" data-required="1" class="span6 m-wrap"/>
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Save</button>
                <button data-dismiss="modal" type="button" class="btn">Cancel</button>
            </div>
        </form>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('js/dataTables.bootstrap4.min.js') }}"></script>
    <script src="{{ asset('js/dataTables.responsive.min.js') }}"></script>
    <script src="{{ asset('js/jquery.validate.min.js') }}"></script>
    <script type="text/javascript">
        jQuery('#needs-list').DataTable({
            "aoColumnDefs": [
                {'bSortable': false, 'aTargets': [0]},
            ]
        });
        jQuery('#capabilities-list').DataTable({
            "aoColumnDefs": [
                {'bSortable': false, 'aTargets': [0]},
            ]
        });
        var NeedsFormValidation = function () {
            var handleValidation1 = function() {
                var form1 = $('#needs-form');
                var error1 = $('.alert-error', form1);
                form1.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-inline', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: "",
                    rules: {
                        title: {
                            minlength: 3,
                            required: true
                        }
                    },
                    invalidHandler: function (event, validator) { //display error alert on form submit                                      error1.show();
                        NeedsFormValidation.scrollTo(error1, -200);
                    },
                    highlight: function (element) { // hightlight error inputs
                        $(element).closest('.help-inline').removeClass('ok'); // display OK icon
                        $(element).closest('.control-group').removeClass('success').addClass('error'); // set error class to the control group
                    },
                    unhighlight: function (element) { // revert the change done by hightlight
                        $(element).closest('.control-group').removeClass('error'); // set error class to the control group
                    },
                    success: function (label) {
                        label.addClass('valid').addClass('help-inline ok') // mark the current input as valid and display OK icon
                        .closest('.control-group').removeClass('error').addClass('success'); // set success class to the control group
                    },
                    submitHandler: function (form) {
                        error1.hide();
                        form.submit();
                    }
                });
            };

            return {
                //main function to initiate the module
                init: function () {
                    handleValidation1();
                },
                // wrapper function to scroll to an element
                scrollTo: function (el, offeset) {
                    pos = el ? el.offset().top : 0;
                    jQuery('html,body').animate({
                            scrollTop: pos + (offeset ? offeset : 0)
                        }, 'slow');
                }
            };
        }();
        var CapabilitiesFormValidation = function () {
            var handleValidation1 = function() {
                var form1 = $('#capabilities-form');
                var error1 = $('.alert-error', form1);
                form1.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-inline', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: "",
                    rules: {
                        title: {
                            minlength: 3,
                            required: true
                        }
                    },
                    invalidHandler: function (event, validator) { //display error alert on form submit                                      error1.show();
                        CapabilitiesFormValidation.scrollTo(error1, -200);
                    },
                    highlight: function (element) { // hightlight error inputs
                        $(element).closest('.help-inline').removeClass('ok'); // display OK icon
                        $(element).closest('.control-group').removeClass('success').addClass('error'); // set error class to the control group
                    },
                    unhighlight: function (element) { // revert the change done by hightlight
                        $(element).closest('.control-group').removeClass('error'); // set error class to the control group
                    },
                    success: function (label) {
                        label.addClass('valid').addClass('help-inline ok') // mark the current input as valid and display OK icon
                        .closest('.control-group').removeClass('error').addClass('success'); // set success class to the control group
                    },
                    submitHandler: function (form) {
                        error1.hide();
                        form.submit();
                    }
                });
            };

            return {
                //main function to initiate the module
                init: function () {
                    handleValidation1();
                },
                // wrapper function to scroll to an element
                scrollTo: function (el, offeset) {
                    pos = el ? el.offset().top : 0;
                    jQuery('html,body').animate({
                            scrollTop: pos + (offeset ? offeset : 0)
                        }, 'slow');
                }
            };
        }();
        jQuery(document).ready(function () {
            NeedsFormValidation.init();
            CapabilitiesFormValidation.init();                        
        });
    </script>
{% endblock %}
